Your company is ready to start using Docker on some of their servers. In order to get started, they want you to set up and configure Docker CE on a server 
that has already been set up. You will need to make sure that the server meets the following specifications:
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

1) Docker CE is installed and running on the server. 
   Note: Considering server is Ubuntu.


   -> update your Ubuntu system:

       $sudo apt-get update 
- updates the list of available packages and their versions, but it does not install or upgrade any packages
       $sudo apt-get upgrade 
- installs newer versions of the packages you have.

->$sudo apt-get install ubuntu_versions
 Docker is not available in the official Ubuntu repositories. So we will add the Docker repository to get the latest version of Docker.

First install the necessary certificates and to allow apt package manager to use a repository over HTTPS using command:

   $sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common

->
add Docker’s official GPG key:
  $curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

->
Add the Docker official repository:
   $sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

->
Run the following command to install Docker CE in Ubuntu server :
sudo apt install docker-ce=5:18.09.5~3-0~ubuntu-bionic docker-ce-cli=5:18.09.5~3-0~ubuntu-bionic containerd.io

->
Once it is installed, verify if the Docker service is started with command:
   $sudo systemctl status docker

->
run the following command to start it if not alreday started:
   $sudo systemctl start docker

->
Check docker version:
'docker -v' to get verion and build  and 'docker info' to get detailed information

Use Docker CE version 5:18.09.5~3-0~ubuntu-bionic.
-------------------------------------------------------------------------------------------------------------------------------------------------

2) Any non-root user has permission to run docker commands.

->
Add the docker group if it doesn't already exist:
   $sudo groupadd docker

Add the connected user "$USER" to the docker group:
   $sudo gpasswd -a $USER docker
or
   $sudo usermod -aG docker $USER
or
   $sudo setfacl -m user:$USER:rw /var/run/docker.sock

Either do a newgrp docker or log out/in to activate the changes to groups.

--------------------------------------------------------------------------------------------------------------------------------------------------

3) The default logging driver is set to syslog.
To configure the Docker daemon to default to a specific logging driver, set the value of log-driver to the name of the logging driver in the daemon.json file,
which is located in /etc/docker/ on Linux hosts or C:\ProgramData\docker\config\ on Windows server hosts. 
The default logging driver is json-file. The following example explicitly sets the default logging driver to syslog:

{
  "log-driver": "syslog"
}

To find the current default logging driver for the Docker daemon
docker info --format '{{.LoggingDriver}}'

To find the current logging driver for a running container
docker inspect -f '{{.HostConfig.LogConfig.Type}}' <CONTAINER>
--------------------------------------------------------------------------------------------------------------------------------------------------

[NOTE: Write the series of commands to achieve above in this file below the question scenario with documentation]

Good luck!

References:
https://askubuntu.com/questions/477551/how-can-i-use-docker-without-sudo
https://www.ostechnix.com/install-docker-ubuntu/
https://docs.docker.com/config/containers/logging/configure/