Your supermarket company has a Docker server where they want to run a simple web service in a container. This web service provides a list of the various kinds of tea sold in each of the company's stores. However, Docker Content Trust on the server is enabled to bolster the overall security. The tea service cannot run on the server because the image is not currently signed.

Your task is to create a new tag for the image, sign it, and then push it to a private registry. Once you have done this, run the image to verify that you can successfully execute the image with Docker Content Trust enabled.

Here is some important information to keep in mind as you work through this lab:

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

1. The signed image should be stored in the ip-10-0-1-102:443/content-dca-tea repository. Generate a trust key and add yourself as a signer for this repository.

    ubuntu@ip-172-31-42-174:/etc/docker$ docker login ec2-18-218-73-122.us-east-2.compute.amazonaws.com
    Username: testuser
    Password:
    WARNING! Your password will be stored unencrypted in /home/ubuntu/.docker/config.json.
    Configure a credential helper to remove this warning. See
    https://docs.docker.com/engine/reference/commandline/login/#credentials-store

    -- Login Succeeded 

       $ docker trust key generate testuser

       $ docker trust signer add --key /home/docker/testuser.pub testuser testuser/dct-test
 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

2. The unsigned image is already pulled on the server and is called linuxacademycontent/content-dca-tea:1.

       $ docker pull linuxacademycontent/content-dca-tea:1

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
3. The server is already configured to use the private registry, which is ip-10-0-1-102:443. You do not need to log in to the registry or configure certificate trust settings for the registry.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------


4. Create a new tag for the image. The new tag should be ip-10-0-1-102:443/content-dca-tea:1.

      $ docker tag tomcat ec2-18-218-73-122.us-east-2.compute.amazonaws.com/tomcat

      $ docker tag linuxacademycontent/content-dca-tea:1 ip-10-0-1-102:443/content-dca-tea:1

      $ docker tag linuxacademycontent/content-dca-tea:1 ec2-18-218-73-122.us-east-2.compute.amazonaws.com/content-dca-tea:1

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

5. Sign the new tag and push it to the private registry.

     $ docker push ec2-18-218-73-122.us-east-2.compute.amazonaws.com/content-dca-tea:1

         Once you have pushed the signed image, you should be able to run it with the line shown here: docker run -d -p 8080:80 ip-10-0-1-102:443/content-dca-tea:1. 

     $ docker run -d -p 8080:80 ec2-18-218-73-122.us-east-2.compute.amazonaws.com/content-dca-tea:1

Once the image is running, you can test it with curl localhost:8080. You should see a JSON list generated for the various kinds of tea.

{
  "description": "types of tea",
  "teas": [
     "88th Night Shincha Organic",
     "Adam's Peak White",
     "Amacha",
     "Amber Oolong",
     "Ancient Green",


